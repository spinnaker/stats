// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.3
// source: log.proto

package stats

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Sourced from https://github.com/spinnaker/orca/blob/master/orca-core/src/main/java/com/netflix/spinnaker/orca/ExecutionStatus.java
type Status int32

const (
	Status_UNKNOWN         Status = 0
	Status_NOT_STARTED     Status = 1
	Status_RUNNING         Status = 2
	Status_PAUSED          Status = 3
	Status_SUSPENDED       Status = 4
	Status_SUCCEEDED       Status = 5
	Status_FAILED_CONTINUE Status = 6
	Status_TERMINAL        Status = 7
	Status_CANCELED        Status = 8
	Status_REDIRECT        Status = 9
	Status_STOPPED         Status = 10
	Status_SKIPPED         Status = 11
	Status_BUFFERED        Status = 12
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0:  "UNKNOWN",
		1:  "NOT_STARTED",
		2:  "RUNNING",
		3:  "PAUSED",
		4:  "SUSPENDED",
		5:  "SUCCEEDED",
		6:  "FAILED_CONTINUE",
		7:  "TERMINAL",
		8:  "CANCELED",
		9:  "REDIRECT",
		10: "STOPPED",
		11: "SKIPPED",
		12: "BUFFERED",
	}
	Status_value = map[string]int32{
		"UNKNOWN":         0,
		"NOT_STARTED":     1,
		"RUNNING":         2,
		"PAUSED":          3,
		"SUSPENDED":       4,
		"SUCCEEDED":       5,
		"FAILED_CONTINUE": 6,
		"TERMINAL":        7,
		"CANCELED":        8,
		"REDIRECT":        9,
		"STOPPED":         10,
		"SKIPPED":         11,
		"BUFFERED":        12,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_log_proto_enumTypes[0].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_log_proto_enumTypes[0]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_log_proto_rawDescGZIP(), []int{0}
}

type SpinnakerInstance_Environment int32

const (
	SpinnakerInstance_ENVIRONMENT_UNKNOWN SpinnakerInstance_Environment = 0
	SpinnakerInstance_KUBERNETES          SpinnakerInstance_Environment = 1
)

// Enum value maps for SpinnakerInstance_Environment.
var (
	SpinnakerInstance_Environment_name = map[int32]string{
		0: "ENVIRONMENT_UNKNOWN",
		1: "KUBERNETES",
	}
	SpinnakerInstance_Environment_value = map[string]int32{
		"ENVIRONMENT_UNKNOWN": 0,
		"KUBERNETES":          1,
	}
)

func (x SpinnakerInstance_Environment) Enum() *SpinnakerInstance_Environment {
	p := new(SpinnakerInstance_Environment)
	*p = x
	return p
}

func (x SpinnakerInstance_Environment) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SpinnakerInstance_Environment) Descriptor() protoreflect.EnumDescriptor {
	return file_log_proto_enumTypes[1].Descriptor()
}

func (SpinnakerInstance_Environment) Type() protoreflect.EnumType {
	return &file_log_proto_enumTypes[1]
}

func (x SpinnakerInstance_Environment) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SpinnakerInstance_Environment.Descriptor instead.
func (SpinnakerInstance_Environment) EnumDescriptor() ([]byte, []int) {
	return file_log_proto_rawDescGZIP(), []int{1, 0}
}

type SpinnakerInstance_DeployedArtifacts int32

const (
	SpinnakerInstance_DEPLOYED_ARTIFACTS_UNKNOWN SpinnakerInstance_DeployedArtifacts = 0
	SpinnakerInstance_DEBIAN_PACKAGES            SpinnakerInstance_DeployedArtifacts = 1
	SpinnakerInstance_DOCKER_CONTAINERS          SpinnakerInstance_DeployedArtifacts = 2
)

// Enum value maps for SpinnakerInstance_DeployedArtifacts.
var (
	SpinnakerInstance_DeployedArtifacts_name = map[int32]string{
		0: "DEPLOYED_ARTIFACTS_UNKNOWN",
		1: "DEBIAN_PACKAGES",
		2: "DOCKER_CONTAINERS",
	}
	SpinnakerInstance_DeployedArtifacts_value = map[string]int32{
		"DEPLOYED_ARTIFACTS_UNKNOWN": 0,
		"DEBIAN_PACKAGES":            1,
		"DOCKER_CONTAINERS":          2,
	}
)

func (x SpinnakerInstance_DeployedArtifacts) Enum() *SpinnakerInstance_DeployedArtifacts {
	p := new(SpinnakerInstance_DeployedArtifacts)
	*p = x
	return p
}

func (x SpinnakerInstance_DeployedArtifacts) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SpinnakerInstance_DeployedArtifacts) Descriptor() protoreflect.EnumDescriptor {
	return file_log_proto_enumTypes[2].Descriptor()
}

func (SpinnakerInstance_DeployedArtifacts) Type() protoreflect.EnumType {
	return &file_log_proto_enumTypes[2]
}

func (x SpinnakerInstance_DeployedArtifacts) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SpinnakerInstance_DeployedArtifacts.Descriptor instead.
func (SpinnakerInstance_DeployedArtifacts) EnumDescriptor() ([]byte, []int) {
	return file_log_proto_rawDescGZIP(), []int{1, 1}
}

type DeploymentMethod_Type int32

const (
	DeploymentMethod_NONE                DeploymentMethod_Type = 0
	DeploymentMethod_OTHER               DeploymentMethod_Type = 1
	DeploymentMethod_HALYARD             DeploymentMethod_Type = 2
	DeploymentMethod_KUBERNETES_OPERATOR DeploymentMethod_Type = 3
	DeploymentMethod_KLEAT               DeploymentMethod_Type = 4
)

// Enum value maps for DeploymentMethod_Type.
var (
	DeploymentMethod_Type_name = map[int32]string{
		0: "NONE",
		1: "OTHER",
		2: "HALYARD",
		3: "KUBERNETES_OPERATOR",
		4: "KLEAT",
	}
	DeploymentMethod_Type_value = map[string]int32{
		"NONE":                0,
		"OTHER":               1,
		"HALYARD":             2,
		"KUBERNETES_OPERATOR": 3,
		"KLEAT":               4,
	}
)

func (x DeploymentMethod_Type) Enum() *DeploymentMethod_Type {
	p := new(DeploymentMethod_Type)
	*p = x
	return p
}

func (x DeploymentMethod_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeploymentMethod_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_log_proto_enumTypes[3].Descriptor()
}

func (DeploymentMethod_Type) Type() protoreflect.EnumType {
	return &file_log_proto_enumTypes[3]
}

func (x DeploymentMethod_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeploymentMethod_Type.Descriptor instead.
func (DeploymentMethod_Type) EnumDescriptor() ([]byte, []int) {
	return file_log_proto_rawDescGZIP(), []int{2, 0}
}

type Execution_Type int32

const (
	Execution_UNKNOWN                      Execution_Type = 0
	Execution_PIPELINE                     Execution_Type = 1
	Execution_ORCHESTRATION                Execution_Type = 2
	Execution_MANAGED_PIPELINE_TEMPLATE_V1 Execution_Type = 3
	Execution_MANAGED_PIPELINE_TEMPLATE_V2 Execution_Type = 4
)

// Enum value maps for Execution_Type.
var (
	Execution_Type_name = map[int32]string{
		0: "UNKNOWN",
		1: "PIPELINE",
		2: "ORCHESTRATION",
		3: "MANAGED_PIPELINE_TEMPLATE_V1",
		4: "MANAGED_PIPELINE_TEMPLATE_V2",
	}
	Execution_Type_value = map[string]int32{
		"UNKNOWN":                      0,
		"PIPELINE":                     1,
		"ORCHESTRATION":                2,
		"MANAGED_PIPELINE_TEMPLATE_V1": 3,
		"MANAGED_PIPELINE_TEMPLATE_V2": 4,
	}
)

func (x Execution_Type) Enum() *Execution_Type {
	p := new(Execution_Type)
	*p = x
	return p
}

func (x Execution_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Execution_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_log_proto_enumTypes[4].Descriptor()
}

func (Execution_Type) Type() protoreflect.EnumType {
	return &file_log_proto_enumTypes[4]
}

func (x Execution_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Execution_Type.Descriptor instead.
func (Execution_Type) EnumDescriptor() ([]byte, []int) {
	return file_log_proto_rawDescGZIP(), []int{4, 0}
}

// Sourced from https://github.com/spinnaker/echo/tree/master/echo-model/src/main/java/com/netflix/spinnaker/echo/model/trigger
type Execution_Trigger_Type int32

const (
	Execution_Trigger_UNKNOWN     Execution_Trigger_Type = 0
	Execution_Trigger_ARTIFACTORY Execution_Trigger_Type = 1
	Execution_Trigger_BUILD       Execution_Trigger_Type = 2
	Execution_Trigger_DOCKER      Execution_Trigger_Type = 3
	Execution_Trigger_GIT         Execution_Trigger_Type = 4
	Execution_Trigger_MANUAL      Execution_Trigger_Type = 5
	Execution_Trigger_PUBSUB      Execution_Trigger_Type = 6
	Execution_Trigger_WEBHOOK     Execution_Trigger_Type = 7
)

// Enum value maps for Execution_Trigger_Type.
var (
	Execution_Trigger_Type_name = map[int32]string{
		0: "UNKNOWN",
		1: "ARTIFACTORY",
		2: "BUILD",
		3: "DOCKER",
		4: "GIT",
		5: "MANUAL",
		6: "PUBSUB",
		7: "WEBHOOK",
	}
	Execution_Trigger_Type_value = map[string]int32{
		"UNKNOWN":     0,
		"ARTIFACTORY": 1,
		"BUILD":       2,
		"DOCKER":      3,
		"GIT":         4,
		"MANUAL":      5,
		"PUBSUB":      6,
		"WEBHOOK":     7,
	}
)

func (x Execution_Trigger_Type) Enum() *Execution_Trigger_Type {
	p := new(Execution_Trigger_Type)
	*p = x
	return p
}

func (x Execution_Trigger_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Execution_Trigger_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_log_proto_enumTypes[5].Descriptor()
}

func (Execution_Trigger_Type) Type() protoreflect.EnumType {
	return &file_log_proto_enumTypes[5]
}

func (x Execution_Trigger_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Execution_Trigger_Type.Descriptor instead.
func (Execution_Trigger_Type) EnumDescriptor() ([]byte, []int) {
	return file_log_proto_rawDescGZIP(), []int{4, 0, 0}
}

type CloudProvider_ID int32

const (
	CloudProvider_UNKNOWN      CloudProvider_ID = 0
	CloudProvider_APPENGINE    CloudProvider_ID = 1
	CloudProvider_AWS          CloudProvider_ID = 2
	CloudProvider_AZURE        CloudProvider_ID = 3
	CloudProvider_CLOUDFOUNDRY CloudProvider_ID = 4
	CloudProvider_DCOS         CloudProvider_ID = 5
	CloudProvider_ECS          CloudProvider_ID = 6
	CloudProvider_GCE          CloudProvider_ID = 7
	CloudProvider_KUBERNETES   CloudProvider_ID = 8
	CloudProvider_ORACLE       CloudProvider_ID = 9
)

// Enum value maps for CloudProvider_ID.
var (
	CloudProvider_ID_name = map[int32]string{
		0: "UNKNOWN",
		1: "APPENGINE",
		2: "AWS",
		3: "AZURE",
		4: "CLOUDFOUNDRY",
		5: "DCOS",
		6: "ECS",
		7: "GCE",
		8: "KUBERNETES",
		9: "ORACLE",
	}
	CloudProvider_ID_value = map[string]int32{
		"UNKNOWN":      0,
		"APPENGINE":    1,
		"AWS":          2,
		"AZURE":        3,
		"CLOUDFOUNDRY": 4,
		"DCOS":         5,
		"ECS":          6,
		"GCE":          7,
		"KUBERNETES":   8,
		"ORACLE":       9,
	}
)

func (x CloudProvider_ID) Enum() *CloudProvider_ID {
	p := new(CloudProvider_ID)
	*p = x
	return p
}

func (x CloudProvider_ID) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CloudProvider_ID) Descriptor() protoreflect.EnumDescriptor {
	return file_log_proto_enumTypes[6].Descriptor()
}

func (CloudProvider_ID) Type() protoreflect.EnumType {
	return &file_log_proto_enumTypes[6]
}

func (x CloudProvider_ID) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CloudProvider_ID.Descriptor instead.
func (CloudProvider_ID) EnumDescriptor() ([]byte, []int) {
	return file_log_proto_rawDescGZIP(), []int{6, 0}
}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpinnakerInstance *SpinnakerInstance `protobuf:"bytes,1,opt,name=spinnaker_instance,json=spinnakerInstance,proto3" json:"spinnaker_instance,omitempty"`
	Application       *Application       `protobuf:"bytes,2,opt,name=application,proto3" json:"application,omitempty"`
	Execution         *Execution         `protobuf:"bytes,3,opt,name=execution,proto3" json:"execution,omitempty"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_log_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_log_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_log_proto_rawDescGZIP(), []int{0}
}

func (x *Event) GetSpinnakerInstance() *SpinnakerInstance {
	if x != nil {
		return x.SpinnakerInstance
	}
	return nil
}

func (x *Event) GetApplication() *Application {
	if x != nil {
		return x.Application
	}
	return nil
}

func (x *Event) GetExecution() *Execution {
	if x != nil {
		return x.Execution
	}
	return nil
}

type SpinnakerInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string                              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Version           string                              `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	DeploymentMethod  *DeploymentMethod                   `protobuf:"bytes,3,opt,name=deployment_method,json=deploymentMethod,proto3" json:"deployment_method,omitempty"`
	Environment       SpinnakerInstance_Environment       `protobuf:"varint,4,opt,name=environment,proto3,enum=io.spinnaker.proto.stats.SpinnakerInstance_Environment" json:"environment,omitempty"`
	DeployedArtifacts SpinnakerInstance_DeployedArtifacts `protobuf:"varint,5,opt,name=deployed_artifacts,json=deployedArtifacts,proto3,enum=io.spinnaker.proto.stats.SpinnakerInstance_DeployedArtifacts" json:"deployed_artifacts,omitempty"`
	// total number of configured pipelines across the entire Spinnaker instance
	PipelineCount int32 `protobuf:"varint,6,opt,name=pipeline_count,json=pipelineCount,proto3" json:"pipeline_count,omitempty"`
}

func (x *SpinnakerInstance) Reset() {
	*x = SpinnakerInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_log_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpinnakerInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpinnakerInstance) ProtoMessage() {}

func (x *SpinnakerInstance) ProtoReflect() protoreflect.Message {
	mi := &file_log_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpinnakerInstance.ProtoReflect.Descriptor instead.
func (*SpinnakerInstance) Descriptor() ([]byte, []int) {
	return file_log_proto_rawDescGZIP(), []int{1}
}

func (x *SpinnakerInstance) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SpinnakerInstance) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *SpinnakerInstance) GetDeploymentMethod() *DeploymentMethod {
	if x != nil {
		return x.DeploymentMethod
	}
	return nil
}

func (x *SpinnakerInstance) GetEnvironment() SpinnakerInstance_Environment {
	if x != nil {
		return x.Environment
	}
	return SpinnakerInstance_ENVIRONMENT_UNKNOWN
}

func (x *SpinnakerInstance) GetDeployedArtifacts() SpinnakerInstance_DeployedArtifacts {
	if x != nil {
		return x.DeployedArtifacts
	}
	return SpinnakerInstance_DEPLOYED_ARTIFACTS_UNKNOWN
}

func (x *SpinnakerInstance) GetPipelineCount() int32 {
	if x != nil {
		return x.PipelineCount
	}
	return 0
}

type DeploymentMethod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    DeploymentMethod_Type `protobuf:"varint,1,opt,name=type,proto3,enum=io.spinnaker.proto.stats.DeploymentMethod_Type" json:"type,omitempty"`
	Version string                `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *DeploymentMethod) Reset() {
	*x = DeploymentMethod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_log_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeploymentMethod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentMethod) ProtoMessage() {}

func (x *DeploymentMethod) ProtoReflect() protoreflect.Message {
	mi := &file_log_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentMethod.ProtoReflect.Descriptor instead.
func (*DeploymentMethod) Descriptor() ([]byte, []int) {
	return file_log_proto_rawDescGZIP(), []int{2}
}

func (x *DeploymentMethod) GetType() DeploymentMethod_Type {
	if x != nil {
		return x.Type
	}
	return DeploymentMethod_NONE
}

func (x *DeploymentMethod) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type Application struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// total number of pipelines in the application that triggered this event
	PipelineCount int32 `protobuf:"varint,2,opt,name=pipeline_count,json=pipelineCount,proto3" json:"pipeline_count,omitempty"`
}

func (x *Application) Reset() {
	*x = Application{}
	if protoimpl.UnsafeEnabled {
		mi := &file_log_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Application) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Application) ProtoMessage() {}

func (x *Application) ProtoReflect() protoreflect.Message {
	mi := &file_log_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Application.ProtoReflect.Descriptor instead.
func (*Application) Descriptor() ([]byte, []int) {
	return file_log_proto_rawDescGZIP(), []int{3}
}

func (x *Application) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Application) GetPipelineCount() int32 {
	if x != nil {
		return x.PipelineCount
	}
	return 0
}

type Execution struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type    Execution_Type     `protobuf:"varint,2,opt,name=type,proto3,enum=io.spinnaker.proto.stats.Execution_Type" json:"type,omitempty"`
	Trigger *Execution_Trigger `protobuf:"bytes,3,opt,name=trigger,proto3" json:"trigger,omitempty"`
	Stages  []*Stage           `protobuf:"bytes,4,rep,name=stages,proto3" json:"stages,omitempty"`
	Status  Status             `protobuf:"varint,5,opt,name=status,proto3,enum=io.spinnaker.proto.stats.Status" json:"status,omitempty"`
}

func (x *Execution) Reset() {
	*x = Execution{}
	if protoimpl.UnsafeEnabled {
		mi := &file_log_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Execution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Execution) ProtoMessage() {}

func (x *Execution) ProtoReflect() protoreflect.Message {
	mi := &file_log_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Execution.ProtoReflect.Descriptor instead.
func (*Execution) Descriptor() ([]byte, []int) {
	return file_log_proto_rawDescGZIP(), []int{4}
}

func (x *Execution) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Execution) GetType() Execution_Type {
	if x != nil {
		return x.Type
	}
	return Execution_UNKNOWN
}

func (x *Execution) GetTrigger() *Execution_Trigger {
	if x != nil {
		return x.Trigger
	}
	return nil
}

func (x *Execution) GetStages() []*Stage {
	if x != nil {
		return x.Stages
	}
	return nil
}

func (x *Execution) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_UNKNOWN
}

type Stage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type          string         `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Status        Status         `protobuf:"varint,2,opt,name=status,proto3,enum=io.spinnaker.proto.stats.Status" json:"status,omitempty"`
	CloudProvider *CloudProvider `protobuf:"bytes,3,opt,name=cloud_provider,json=cloudProvider,proto3" json:"cloud_provider,omitempty"`
}

func (x *Stage) Reset() {
	*x = Stage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_log_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stage) ProtoMessage() {}

func (x *Stage) ProtoReflect() protoreflect.Message {
	mi := &file_log_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stage.ProtoReflect.Descriptor instead.
func (*Stage) Descriptor() ([]byte, []int) {
	return file_log_proto_rawDescGZIP(), []int{5}
}

func (x *Stage) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Stage) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_UNKNOWN
}

func (x *Stage) GetCloudProvider() *CloudProvider {
	if x != nil {
		return x.CloudProvider
	}
	return nil
}

type CloudProvider struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      CloudProvider_ID `protobuf:"varint,1,opt,name=id,proto3,enum=io.spinnaker.proto.stats.CloudProvider_ID" json:"id,omitempty"`
	Variant string           `protobuf:"bytes,2,opt,name=variant,proto3" json:"variant,omitempty"`
}

func (x *CloudProvider) Reset() {
	*x = CloudProvider{}
	if protoimpl.UnsafeEnabled {
		mi := &file_log_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloudProvider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudProvider) ProtoMessage() {}

func (x *CloudProvider) ProtoReflect() protoreflect.Message {
	mi := &file_log_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudProvider.ProtoReflect.Descriptor instead.
func (*CloudProvider) Descriptor() ([]byte, []int) {
	return file_log_proto_rawDescGZIP(), []int{6}
}

func (x *CloudProvider) GetId() CloudProvider_ID {
	if x != nil {
		return x.Id
	}
	return CloudProvider_UNKNOWN
}

func (x *CloudProvider) GetVariant() string {
	if x != nil {
		return x.Variant
	}
	return ""
}

type Execution_Trigger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type Execution_Trigger_Type `protobuf:"varint,1,opt,name=type,proto3,enum=io.spinnaker.proto.stats.Execution_Trigger_Type" json:"type,omitempty"`
}

func (x *Execution_Trigger) Reset() {
	*x = Execution_Trigger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_log_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Execution_Trigger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Execution_Trigger) ProtoMessage() {}

func (x *Execution_Trigger) ProtoReflect() protoreflect.Message {
	mi := &file_log_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Execution_Trigger.ProtoReflect.Descriptor instead.
func (*Execution_Trigger) Descriptor() ([]byte, []int) {
	return file_log_proto_rawDescGZIP(), []int{4, 0}
}

func (x *Execution_Trigger) GetType() Execution_Trigger_Type {
	if x != nil {
		return x.Type
	}
	return Execution_Trigger_UNKNOWN
}

var File_log_proto protoreflect.FileDescriptor

var file_log_proto_rawDesc = []byte{
	0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x69, 0x6f, 0x2e,
	0x73, 0x70, 0x69, 0x6e, 0x6e, 0x61, 0x6b, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x73, 0x74, 0x61, 0x74, 0x73, 0x22, 0xef, 0x01, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x5a, 0x0a, 0x12, 0x73, 0x70, 0x69, 0x6e, 0x6e, 0x61, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x69, 0x6f,
	0x2e, 0x73, 0x70, 0x69, 0x6e, 0x6e, 0x61, 0x6b, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x53, 0x70, 0x69, 0x6e, 0x6e, 0x61, 0x6b, 0x65, 0x72,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x11, 0x73, 0x70, 0x69, 0x6e, 0x6e, 0x61,
	0x6b, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x47, 0x0a, 0x0b, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x69, 0x6f, 0x2e, 0x73, 0x70, 0x69, 0x6e, 0x6e, 0x61, 0x6b, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x41, 0x0a, 0x09, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x69, 0x6f, 0x2e, 0x73, 0x70, 0x69,
	0x6e, 0x6e, 0x61, 0x6b, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x61,
	0x74, 0x73, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9f, 0x04, 0x0a, 0x11, 0x53, 0x70, 0x69, 0x6e,
	0x6e, 0x61, 0x6b, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x57, 0x0a, 0x11, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x69, 0x6f, 0x2e, 0x73, 0x70, 0x69, 0x6e, 0x6e, 0x61, 0x6b, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x10,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x12, 0x59, 0x0a, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x69, 0x6f, 0x2e, 0x73, 0x70, 0x69, 0x6e, 0x6e,
	0x61, 0x6b, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x73,
	0x2e, 0x53, 0x70, 0x69, 0x6e, 0x6e, 0x61, 0x6b, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b,
	0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x6c, 0x0a, 0x12, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x69, 0x6f, 0x2e, 0x73, 0x70, 0x69,
	0x6e, 0x6e, 0x61, 0x6b, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x61,
	0x74, 0x73, 0x2e, 0x53, 0x70, 0x69, 0x6e, 0x6e, 0x61, 0x6b, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x41, 0x72, 0x74,
	0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x52, 0x11, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64,
	0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0d, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x36, 0x0a, 0x0b, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x17, 0x0a, 0x13, 0x45, 0x4e, 0x56, 0x49, 0x52, 0x4f, 0x4e, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x4b, 0x55, 0x42, 0x45,
	0x52, 0x4e, 0x45, 0x54, 0x45, 0x53, 0x10, 0x01, 0x22, 0x5f, 0x0a, 0x11, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x65, 0x64, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x12, 0x1e, 0x0a,
	0x1a, 0x44, 0x45, 0x50, 0x4c, 0x4f, 0x59, 0x45, 0x44, 0x5f, 0x41, 0x52, 0x54, 0x49, 0x46, 0x41,
	0x43, 0x54, 0x53, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x13, 0x0a,
	0x0f, 0x44, 0x45, 0x42, 0x49, 0x41, 0x4e, 0x5f, 0x50, 0x41, 0x43, 0x4b, 0x41, 0x47, 0x45, 0x53,
	0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x4f, 0x43, 0x4b, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4e,
	0x54, 0x41, 0x49, 0x4e, 0x45, 0x52, 0x53, 0x10, 0x02, 0x22, 0xbf, 0x01, 0x0a, 0x10, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x43,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x69,
	0x6f, 0x2e, 0x73, 0x70, 0x69, 0x6e, 0x6e, 0x61, 0x6b, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x4c, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x09, 0x0a, 0x05, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x48, 0x41,
	0x4c, 0x59, 0x41, 0x52, 0x44, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x4b, 0x55, 0x42, 0x45, 0x52,
	0x4e, 0x45, 0x54, 0x45, 0x53, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x10, 0x03,
	0x12, 0x09, 0x0a, 0x05, 0x4b, 0x4c, 0x45, 0x41, 0x54, 0x10, 0x04, 0x22, 0x44, 0x0a, 0x0b, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0xca, 0x04, 0x0a, 0x09, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x3c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e,
	0x69, 0x6f, 0x2e, 0x73, 0x70, 0x69, 0x6e, 0x6e, 0x61, 0x6b, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x45, 0x0a,
	0x07, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x69, 0x6f, 0x2e, 0x73, 0x70, 0x69, 0x6e, 0x6e, 0x61, 0x6b, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x07, 0x74, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x12, 0x37, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x67, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x69, 0x6f, 0x2e, 0x73, 0x70, 0x69, 0x6e, 0x6e, 0x61,
	0x6b, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e,
	0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x67, 0x65, 0x73, 0x12, 0x38, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e,
	0x69, 0x6f, 0x2e, 0x73, 0x70, 0x69, 0x6e, 0x6e, 0x61, 0x6b, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0xba, 0x01, 0x0a, 0x07, 0x54, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x12, 0x44, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x30, 0x2e, 0x69, 0x6f, 0x2e, 0x73, 0x70, 0x69, 0x6e, 0x6e, 0x61, 0x6b, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x69, 0x0a, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0f,
	0x0a, 0x0b, 0x41, 0x52, 0x54, 0x49, 0x46, 0x41, 0x43, 0x54, 0x4f, 0x52, 0x59, 0x10, 0x01, 0x12,
	0x09, 0x0a, 0x05, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x4f,
	0x43, 0x4b, 0x45, 0x52, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x49, 0x54, 0x10, 0x04, 0x12,
	0x0a, 0x0a, 0x06, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x10, 0x05, 0x12, 0x0a, 0x0a, 0x06, 0x50,
	0x55, 0x42, 0x53, 0x55, 0x42, 0x10, 0x06, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x45, 0x42, 0x48, 0x4f,
	0x4f, 0x4b, 0x10, 0x07, 0x22, 0x78, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x49, 0x50,
	0x45, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x4f, 0x52, 0x43, 0x48, 0x45,
	0x53, 0x54, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x12, 0x20, 0x0a, 0x1c, 0x4d, 0x41,
	0x4e, 0x41, 0x47, 0x45, 0x44, 0x5f, 0x50, 0x49, 0x50, 0x45, 0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x54,
	0x45, 0x4d, 0x50, 0x4c, 0x41, 0x54, 0x45, 0x5f, 0x56, 0x31, 0x10, 0x03, 0x12, 0x20, 0x0a, 0x1c,
	0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45, 0x44, 0x5f, 0x50, 0x49, 0x50, 0x45, 0x4c, 0x49, 0x4e, 0x45,
	0x5f, 0x54, 0x45, 0x4d, 0x50, 0x4c, 0x41, 0x54, 0x45, 0x5f, 0x56, 0x32, 0x10, 0x04, 0x22, 0xa5,
	0x01, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x69,
	0x6f, 0x2e, 0x73, 0x70, 0x69, 0x6e, 0x6e, 0x61, 0x6b, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x4e, 0x0a, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x69, 0x6f, 0x2e, 0x73, 0x70, 0x69, 0x6e, 0x6e, 0x61, 0x6b, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x0d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x22, 0xe5, 0x01, 0x0a, 0x0d, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x3a, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x69, 0x6f, 0x2e, 0x73, 0x70, 0x69, 0x6e, 0x6e, 0x61,
	0x6b, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x49, 0x44,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x22, 0x7e,
	0x0a, 0x02, 0x49, 0x44, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10,
	0x00, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x50, 0x50, 0x45, 0x4e, 0x47, 0x49, 0x4e, 0x45, 0x10, 0x01,
	0x12, 0x07, 0x0a, 0x03, 0x41, 0x57, 0x53, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x5a, 0x55,
	0x52, 0x45, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x4c, 0x4f, 0x55, 0x44, 0x46, 0x4f, 0x55,
	0x4e, 0x44, 0x52, 0x59, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x43, 0x4f, 0x53, 0x10, 0x05,
	0x12, 0x07, 0x0a, 0x03, 0x45, 0x43, 0x53, 0x10, 0x06, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x43, 0x45,
	0x10, 0x07, 0x12, 0x0e, 0x0a, 0x0a, 0x4b, 0x55, 0x42, 0x45, 0x52, 0x4e, 0x45, 0x54, 0x45, 0x53,
	0x10, 0x08, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x52, 0x41, 0x43, 0x4c, 0x45, 0x10, 0x09, 0x2a, 0xc4,
	0x01, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x54,
	0x41, 0x52, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e, 0x4e, 0x49,
	0x4e, 0x47, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x41, 0x55, 0x53, 0x45, 0x44, 0x10, 0x03,
	0x12, 0x0d, 0x0a, 0x09, 0x53, 0x55, 0x53, 0x50, 0x45, 0x4e, 0x44, 0x45, 0x44, 0x10, 0x04, 0x12,
	0x0d, 0x0a, 0x09, 0x53, 0x55, 0x43, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10, 0x05, 0x12, 0x13,
	0x0a, 0x0f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x49, 0x4e, 0x55,
	0x45, 0x10, 0x06, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x45, 0x52, 0x4d, 0x49, 0x4e, 0x41, 0x4c, 0x10,
	0x07, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x45, 0x44, 0x10, 0x08, 0x12,
	0x0c, 0x0a, 0x08, 0x52, 0x45, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x10, 0x09, 0x12, 0x0b, 0x0a,
	0x07, 0x53, 0x54, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x10, 0x0a, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x4b,
	0x49, 0x50, 0x50, 0x45, 0x44, 0x10, 0x0b, 0x12, 0x0c, 0x0a, 0x08, 0x42, 0x55, 0x46, 0x46, 0x45,
	0x52, 0x45, 0x44, 0x10, 0x0c, 0x42, 0x5c, 0x0a, 0x26, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74,
	0x66, 0x6c, 0x69, 0x78, 0x2e, 0x73, 0x70, 0x69, 0x6e, 0x6e, 0x61, 0x6b, 0x65, 0x72, 0x2e, 0x6b,
	0x6f, 0x72, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x73, 0x50,
	0x01, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x70,
	0x69, 0x6e, 0x6e, 0x61, 0x6b, 0x65, 0x72, 0x2f, 0x6b, 0x6f, 0x72, 0x6b, 0x2f, 0x6b, 0x6f, 0x72,
	0x6b, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x74,
	0x61, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_log_proto_rawDescOnce sync.Once
	file_log_proto_rawDescData = file_log_proto_rawDesc
)

func file_log_proto_rawDescGZIP() []byte {
	file_log_proto_rawDescOnce.Do(func() {
		file_log_proto_rawDescData = protoimpl.X.CompressGZIP(file_log_proto_rawDescData)
	})
	return file_log_proto_rawDescData
}

var file_log_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_log_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_log_proto_goTypes = []interface{}{
	(Status)(0),                              // 0: io.spinnaker.proto.stats.Status
	(SpinnakerInstance_Environment)(0),       // 1: io.spinnaker.proto.stats.SpinnakerInstance.Environment
	(SpinnakerInstance_DeployedArtifacts)(0), // 2: io.spinnaker.proto.stats.SpinnakerInstance.DeployedArtifacts
	(DeploymentMethod_Type)(0),               // 3: io.spinnaker.proto.stats.DeploymentMethod.Type
	(Execution_Type)(0),                      // 4: io.spinnaker.proto.stats.Execution.Type
	(Execution_Trigger_Type)(0),              // 5: io.spinnaker.proto.stats.Execution.Trigger.Type
	(CloudProvider_ID)(0),                    // 6: io.spinnaker.proto.stats.CloudProvider.ID
	(*Event)(nil),                            // 7: io.spinnaker.proto.stats.Event
	(*SpinnakerInstance)(nil),                // 8: io.spinnaker.proto.stats.SpinnakerInstance
	(*DeploymentMethod)(nil),                 // 9: io.spinnaker.proto.stats.DeploymentMethod
	(*Application)(nil),                      // 10: io.spinnaker.proto.stats.Application
	(*Execution)(nil),                        // 11: io.spinnaker.proto.stats.Execution
	(*Stage)(nil),                            // 12: io.spinnaker.proto.stats.Stage
	(*CloudProvider)(nil),                    // 13: io.spinnaker.proto.stats.CloudProvider
	(*Execution_Trigger)(nil),                // 14: io.spinnaker.proto.stats.Execution.Trigger
}
var file_log_proto_depIdxs = []int32{
	8,  // 0: io.spinnaker.proto.stats.Event.spinnaker_instance:type_name -> io.spinnaker.proto.stats.SpinnakerInstance
	10, // 1: io.spinnaker.proto.stats.Event.application:type_name -> io.spinnaker.proto.stats.Application
	11, // 2: io.spinnaker.proto.stats.Event.execution:type_name -> io.spinnaker.proto.stats.Execution
	9,  // 3: io.spinnaker.proto.stats.SpinnakerInstance.deployment_method:type_name -> io.spinnaker.proto.stats.DeploymentMethod
	1,  // 4: io.spinnaker.proto.stats.SpinnakerInstance.environment:type_name -> io.spinnaker.proto.stats.SpinnakerInstance.Environment
	2,  // 5: io.spinnaker.proto.stats.SpinnakerInstance.deployed_artifacts:type_name -> io.spinnaker.proto.stats.SpinnakerInstance.DeployedArtifacts
	3,  // 6: io.spinnaker.proto.stats.DeploymentMethod.type:type_name -> io.spinnaker.proto.stats.DeploymentMethod.Type
	4,  // 7: io.spinnaker.proto.stats.Execution.type:type_name -> io.spinnaker.proto.stats.Execution.Type
	14, // 8: io.spinnaker.proto.stats.Execution.trigger:type_name -> io.spinnaker.proto.stats.Execution.Trigger
	12, // 9: io.spinnaker.proto.stats.Execution.stages:type_name -> io.spinnaker.proto.stats.Stage
	0,  // 10: io.spinnaker.proto.stats.Execution.status:type_name -> io.spinnaker.proto.stats.Status
	0,  // 11: io.spinnaker.proto.stats.Stage.status:type_name -> io.spinnaker.proto.stats.Status
	13, // 12: io.spinnaker.proto.stats.Stage.cloud_provider:type_name -> io.spinnaker.proto.stats.CloudProvider
	6,  // 13: io.spinnaker.proto.stats.CloudProvider.id:type_name -> io.spinnaker.proto.stats.CloudProvider.ID
	5,  // 14: io.spinnaker.proto.stats.Execution.Trigger.type:type_name -> io.spinnaker.proto.stats.Execution.Trigger.Type
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_log_proto_init() }
func file_log_proto_init() {
	if File_log_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_log_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_log_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpinnakerInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_log_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeploymentMethod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_log_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Application); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_log_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Execution); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_log_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_log_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloudProvider); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_log_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Execution_Trigger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_log_proto_rawDesc,
			NumEnums:      7,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_log_proto_goTypes,
		DependencyIndexes: file_log_proto_depIdxs,
		EnumInfos:         file_log_proto_enumTypes,
		MessageInfos:      file_log_proto_msgTypes,
	}.Build()
	File_log_proto = out.File
	file_log_proto_rawDesc = nil
	file_log_proto_goTypes = nil
	file_log_proto_depIdxs = nil
}
